+                       pfms=query(MotifDb, "sapiens", "jaspar2018"),
+    .... [TRUNCATED] 

>  
  builder <- RegionsMotifMatchingModelBuilder(genome, targetGene,  build.spec, quiet=TRUE)

>  
  x <- build(builder)
>    checkEquals(names(x), c("model", "regulatoryRegions"))
[1] TRUE
>    tbl.regRegions <- x$regulatoryRegions
>    tbl.model <- x$model
> dim(tbl.model)
[1] 20 10
> (tbl.model)
     gene    betaLasso  lassoPValue pearsonCoeff   rfScore    betaRidge spearmanCoeff concordance     pcaMax bindingSites
9    LYL1  0.290168329 5.919905e-47    0.7395869 44.395882  0.139983477     0.7307639  0.43807521 1.17851088           12
13   SPI1  0.192558295 3.883766e-35    0.7075473 41.953014  0.130969819     0.7281323  0.41006653 1.02091683            9
18   TFEC  0.205272972 8.429597e-39    0.7027833 37.817564  0.135732872     0.7045391  0.40990892 1.02447159            5
11 NFATC2  0.000000000 2.932163e-01    0.5931621 18.246258  0.056627728     0.6008670  0.17469962 0.29578146           11
16   TAL1  0.022297269 7.892016e-05    0.6067164 16.163993  0.074681240     0.5828756  0.21044526 0.36043816           12
7    HHEX  0.000000000 8.693152e-01    0.5326310  9.686674  0.026834537     0.5267791  0.02298679 0.03613408            9
6   FOXP1 -0.119006076 7.013970e-14   -0.4549901  9.362815 -0.099445907    -0.4441304  0.42240018 2.81796707           18
3    ELK3  0.000000000 8.216459e-01    0.5673856  9.206357  0.031249414     0.5758841  0.09133837 0.14788667            3
8    KLF3  0.001365858 1.868283e-10    0.4957351  9.074141  0.032017301     0.5023609  0.08362601 0.13265387            2
10  MESP1 -0.097140146 5.476443e-11   -0.4128342  8.932019 -0.067267944    -0.3832579  0.42275259 2.62914990           12
4    FLI1  0.000000000 7.393829e-01    0.5474218  8.153436  0.019437820     0.5528440  0.06526792 0.10310115            4
12  RUNX1  0.000000000 4.126656e-01    0.5410036  7.275652  0.043211078     0.5420431  0.06935212 0.10980090            1
2    ELF4  0.000000000 8.607360e-01    0.5549280  5.926077  0.039565501     0.5537167  0.07653670 0.12214887            3
5   FOXJ3 -0.033286726 7.522232e-08   -0.4404496  5.827713 -0.051742864    -0.4200710  0.43972706 2.69431383           18
15 STAT5A  0.000000000 7.507755e-01    0.4596359  4.830754  0.030243239     0.4640054  0.10315088 0.16734261            1
1    ELF1  0.000000000 9.231816e-01    0.5162191  4.801104  0.006843802     0.4990524  0.08918504 0.14171543            3
20  ZFHX3  0.000000000 6.796959e-01    0.4569959  4.715877  0.005370795     0.4453429  0.14320424 0.24020840            1
14  STAT3  0.000000000 2.880675e-01    0.4737882  4.146719 -0.020485496     0.4773011  0.19475992 0.32314854            2
19  TGIF2  0.000000000 6.082179e-01    0.4177120  4.003705  0.020931406     0.3995904  0.17702128 0.31670760           12
17  TCF12  0.000000000 8.842570e-01    0.4277501  3.457057  0.013112588     0.4035548  0.17350504 0.30959956            2
> tbl.model$gene[1:5]
[1] "LYL1"   "SPI1"   "TFEC"   "NFATC2" "TAL1"  
>    expected.top.tfs <- sort(c("LYL1", "SPI1", "TFEC", "NFATC2", "TAL1"))
>    checkEquals(sort(tbl.model$gene[1:5]), expected.top.tfs)
[1] TRUE
>    checkTrue(all(expected.top.tfs %in% tbl.regRegions$geneSymbol))
[1] TRUE
>    checkTrue(all(tbl.regRegions$chrom == chromosome))
[1] TRUE
>    checkTrue(all(tbl.regRegions$fmotifStart >= min(tbl.regions$start)))
[1] TRUE
>    checkTrue(all(tbl.regRegions$motifEnd <= max(tbl.regions$end)))
[1] TRUE
> q()

Process R finished at Mon May 21 17:47:09 2018


R version 3.5.0 (2018-04-23) -- "Joy in Playing"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> > if(identical(getOption('pager'), file.path(R.home('bin'), 'pager'))) # rather take the ESS one
+       options(pager='cat')
> options(STERM='iESS', str.dendrogram.last="'", editor='emacsclient', show.error.locations=TRUE)
> source("test_RegionsMotifMatchingModelBuilder.R"); runTests()
Loading required package: GenomicRanges
Loading required package: stats4
Loading required package: BiocGenerics
Loading required package: parallel

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ, clusterExport, clusterMap, parApply, parCapply, parLapply, parLapplyLB, parRapply, parSapply, parSapplyLB

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, append, as.data.frame, basename, cbind, colMeans, colnames, colSums, dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep, grepl, intersect, is.unsorted, lapply, lengths, Map, mapply, match, mget, order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank, rbind, Reduce, rowMeans, rownames, rowSums, sapply, setdiff, sort, table, tapply, union, unique, unsplit, which, which.max, which.min

Loading required package: S4Vectors

Attaching package: ‘S4Vectors’

The following object is masked from ‘package:base’:

    expand.grid

Loading required package: IRanges
Loading required package: GenomeInfoDb
Loading required package: trena
Loading required package: glmnet
Loading required package: Matrix

Attaching package: ‘Matrix’

The following object is masked from ‘package:S4Vectors’:

    expand

Loading required package: foreach
Loaded glmnet 2.0-16

Loading required package: MotifDb
Loading required package: Biostrings
Loading required package: XVector

Attaching package: ‘Biostrings’

The following object is masked from ‘package:base’:

    strsplit

See system.file("LICENSE", package="MotifDb") for use restrictions.

[1] --- test_constructor
[1] --- test_build.trem2.2200bp.motifDb.model
[1] --- test_build.trem2.2200bp.TFClass.model
[1] --- test_build.trem2.2200bp.TFClass.and.MotifDbmodel
[1] TRUE
> library(GSEABase)
library(GOstats)
library(GO.db)
library(Category)
library(org.Hs.eg.db)
library(KEGG.db)

symbol.entrez.map <- assignGeneIDs(genes)$mapped

gene.universe = character(0)
geneIDs <- unlist(symbol.entrez.map, use.names=FALSE)

go.params <- new("GOHyperGParams", geneIds=unique(geneIDs),
                 universeGeneIds = gene.universe, annotation = "org.Hs.eg.db",
                 ontology = 'BP', pvalueCutoff = 0.05, conditional = FALSE,
                 testDirection = "over")

kegg.params <- new("KEGGHyperGParams", geneIds = unique(geneIDs),
                   universeGeneIds = character(0), annotation = "org.Hs.eg.db",
                   pvalueCutoff = 0.1, testDirection = "over")

go.bp.hgr <- hyperGTest(go.params)

library(GSEABase)
Loading required package: Biobase
Welcome to Bioconductor

    Vignettes contain introductory material; view with 'browseVignettes()'. To cite Bioconductor, see 'citation("Biobase")', and for packages 'citation("pkgname")'.

Loading required package: annotate
Loading required package: AnnotationDbi
Loading required package: XML
Loading required package: graph

Attaching package: ‘graph’

The following object is masked from ‘package:XML’:

    addNode

The following object is masked from ‘package:Biostrings’:

    complement

> library(GOstats)
Error in library(GOstats) : there is no package called ‘GOstats’
> library(GO.db)
Error in library(GO.db) : there is no package called ‘GO.db’
> library(Category)
Error in library(Category) : there is no package called ‘Category’
> library(org.Hs.eg.db)
> library(KEGG.db)
Error in library(KEGG.db) : there is no package called ‘KEGG.db’
> 
> symbol.entrez.map <- assignGeneIDs(genes)$mapped
Error in assignGeneIDs(genes) : could not find function "assignGeneIDs"
> 
> gene.universe = character(0)
> geneIDs <- unlist(symbol.entrez.map, use.names=FALSE)
Error in unlist(symbol.entrez.map, use.names = FALSE) : 
  object 'symbol.entrez.map' not found
> 
> go.params <- new("GOHyperGParams", geneIds=unique(geneIDs),
+                  universeGeneIds = gene.universe, annotation = "org.Hs.eg.db",
+                  ontology = 'BP', pvalueCutoff = 0.05, conditional = FALSE,
+                  testDirection = "over")
Error in getClass(Class, where = topenv(parent.frame())) : 
  “GOHyperGParams” is not a defined class
> 
> kegg.params <- new("KEGGHyperGParams", geneIds = unique(geneIDs),
+                    universeGeneIds = character(0), annotation = "org.Hs.eg.db",
+                    pvalueCutoff = 0.1, testDirection = "over")
Error in getClass(Class, where = topenv(parent.frame())) : 
  “KEGGHyperGParams” is not a defined class
> 
> go.bp.hgr <- hyperGTest(go.params)
Error in hyperGTest(go.params) : could not find function "hyperGTest"
> biocGet(c("GOstats", "GO.db", "KEGG.db"))
Bioconductor version 3.8 (BiocInstaller 1.31.1), ?biocLite for help
BioC_mirror: https://bioconductor.org
Using Bioconductor 3.8 (BiocInstaller 1.31.1), R 3.5.0 (2018-04-23).
Installing package(s) ‘GOstats’, ‘GO.db’, ‘KEGG.db’
also installing the dependencies ‘genefilter’, ‘Category’, ‘AnnotationForge’, ‘Rgraphviz’

trying URL 'https://bioconductor.org/packages/3.8/bioc/bin/macosx/el-capitan/contrib/3.5/genefilter_1.63.0.tgz'
Content type 'application/x-gzip' length 2118171 bytes (2.0 MB)
==================================================
downloaded 2.0 MB

trying URL 'https://bioconductor.org/packages/3.8/bioc/bin/macosx/el-capitan/contrib/3.5/Category_2.47.0.tgz'
Content type 'application/x-gzip' length 1267483 bytes (1.2 MB)
==================================================
downloaded 1.2 MB

trying URL 'https://bioconductor.org/packages/3.8/bioc/bin/macosx/el-capitan/contrib/3.5/AnnotationForge_1.23.0.tgz'
Content type 'application/x-gzip' length 4246805 bytes (4.1 MB)
==================================================
downloaded 4.1 MB

trying URL 'https://bioconductor.org/packages/3.8/bioc/bin/macosx/el-capitan/contrib/3.5/Rgraphviz_2.25.0.tgz'
Content type 'application/x-gzip' length 1559228 bytes (1.5 MB)
==================================================
downloaded 1.5 MB

trying URL 'https://bioconductor.org/packages/3.8/bioc/bin/macosx/el-capitan/contrib/3.5/GOstats_2.47.0.tgz'
Content type 'application/x-gzip' length 2070463 bytes (2.0 MB)
==================================================
downloaded 2.0 MB


The downloaded binary packages are in
	/var/folders/qw/f4r8_r9513548zsbzxv17wg40000gp/T//RtmpXOkaaq/downloaded_packages
installing the source packages ‘GO.db’, ‘KEGG.db’

trying URL 'https://bioconductor.org/packages/3.8/data/annotation/src/contrib/GO.db_3.6.0.tar.gz'
Content type 'application/x-gzip' length 31763273 bytes (30.3 MB)
==================================================
downloaded 30.3 MB

trying URL 'https://bioconductor.org/packages/3.8/data/annotation/src/contrib/KEGG.db_3.2.3.tar.gz'
Content type 'application/x-gzip' length 1976342 bytes (1.9 MB)
==================================================
downloaded 1.9 MB

* installing *source* package ‘GO.db’ ...
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded
* DONE (GO.db)
* installing *source* package ‘KEGG.db’ ...
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded
* DONE (KEGG.db)

The downloaded source packages are in
	‘/private/var/folders/qw/f4r8_r9513548zsbzxv17wg40000gp/T/RtmpXOkaaq/downloaded_packages’
Old packages: 'bit'
Update all/some/none? [a/s/n]: a

  There is a binary version available but the source version is later:
    binary source needs_compilation
bit 1.1-12 1.1-13              TRUE

Do you want to install from sources the package which needs compilation? (Yes/no/cancel) no
trying URL 'https://cran.rstudio.com/bin/macosx/el-capitan/contrib/3.5/bit_1.1-12.tgz'
Content type 'application/x-gzip' length 243803 bytes (238 KB)
==================================================
downloaded 238 KB


The downloaded binary packages are in
	/var/folders/qw/f4r8_r9513548zsbzxv17wg40000gp/T//RtmpXOkaaq/downloaded_packages
> library(GSEABase)
library(GOstats)
library(GO.db)
library(Category)
library(org.Hs.eg.db)
library(KEGG.db)

symbol.entrez.map <- assignGeneIDs(genes)$mapped

gene.universe = character(0)
geneIDs <- unlist(symbol.entrez.map, use.names=FALSE)

go.params <- new("GOHyperGParams", geneIds=unique(geneIDs),
                 universeGeneIds = gene.universe, annotation = "org.Hs.eg.db",
                 ontology = 'BP', pvalueCutoff = 0.05, conditional = FALSE,
                 testDirection = "over")

kegg.params <- new("KEGGHyperGParams", geneIds = unique(geneIDs),
                   universeGeneIds = character(0), annotation = "org.Hs.eg.db",
                   pvalueCutoff = 0.1, testDirection = "over")

go.bp.hgr <- hyperGTest(go.params)

library(GSEABase)
> library(GOstats)
Loading required package: Category


Attaching package: ‘GOstats’

The following object is masked from ‘package:AnnotationDbi’:

    makeGOGraph

> library(GO.db)
> library(Category)
> library(org.Hs.eg.db)
> library(KEGG.db)

KEGG.db contains mappings based on older data because the original resource was removed from the the public domain before the most recent update was produced. This package should now be considered deprecated and future versions of Bioconductor may not have it available.  Users who want more current data are encouraged to look at the KEGGREST or reactome.db packages

> 
> symbol.entrez.map <- assignGeneIDs(genes)$mapped
Error in assignGeneIDs(genes) : could not find function "assignGeneIDs"
> 
> gene.universe = character(0)
> geneIDs <- unlist(symbol.entrez.map, use.names=FALSE)
Error in unlist(symbol.entrez.map, use.names = FALSE) : 
  object 'symbol.entrez.map' not found
> 
> go.params <- new("GOHyperGParams", geneIds=unique(geneIDs),
+                  universeGeneIds = gene.universe, annotation = "org.Hs.eg.db",
+                  ontology = 'BP', pvalueCutoff = 0.05, conditional = FALSE,
+                  testDirection = "over")
Error in unique(geneIDs) : object 'geneIDs' not found
> 
> kegg.params <- new("KEGGHyperGParams", geneIds = unique(geneIDs),
+                    universeGeneIds = character(0), annotation = "org.Hs.eg.db",
+                    pvalueCutoff = 0.1, testDirection = "over")
Error in unique(geneIDs) : object 'geneIDs' not found
> 
> go.bp.hgr <- hyperGTest(go.params)
Error in hyperGTest(go.params) : object 'go.params' not found
> source("~/s/data/public/human/symToGeneID.R"); test_assignGeneIDs()

source("~/s/data/public/human/symToGeneID.R"); test_assignGeneIDs()
[1] "--- test_assignGeneIDs"
[1] TRUE
> library(GOstats)
library(GO.db)
library(Category)
library(org.Hs.eg.db)
library(KEGG.db)

symbol.entrez.map <- assignGeneIDs(genes)$mapped

gene.universe = character(0)
geneIDs <- unlist(symbol.entrez.map, use.names=FALSE)

go.params <- new("GOHyperGParams", geneIds=unique(geneIDs),
                 universeGeneIds = gene.universe, annotation = "org.Hs.eg.db",
                 ontology = 'BP', pvalueCutoff = 0.05, conditional = FALSE,
                 testDirection = "over")

kegg.params <- new("KEGGHyperGParams", geneIds = unique(geneIDs),
                   universeGeneIds = character(0), annotation = "org.Hs.eg.db",
                   pvalueCutoff = 0.1, testDirection = "over")

go.bp.hgr <- hyperGTest(go.params)

library(GOstats)
> library(GO.db)
> library(Category)
> library(org.Hs.eg.db)
> library(KEGG.db)
> 
> symbol.entrez.map <- assignGeneIDs(genes)$mapped
Error in mget(symbols, org.Hs.egSYMBOL2EG, ifnotfound = NA) : 
  object 'genes' not found
> 
> gene.universe = character(0)
> geneIDs <- unlist(symbol.entrez.map, use.names=FALSE)
Error in unlist(symbol.entrez.map, use.names = FALSE) : 
  object 'symbol.entrez.map' not found
> 
> go.params <- new("GOHyperGParams", geneIds=unique(geneIDs),
+                  universeGeneIds = gene.universe, annotation = "org.Hs.eg.db",
+                  ontology = 'BP', pvalueCutoff = 0.05, conditional = FALSE,
+                  testDirection = "over")
Error in unique(geneIDs) : object 'geneIDs' not found
> 
> kegg.params <- new("KEGGHyperGParams", geneIds = unique(geneIDs),
+                    universeGeneIds = character(0), annotation = "org.Hs.eg.db",
+                    pvalueCutoff = 0.1, testDirection = "over")
Error in unique(geneIDs) : object 'geneIDs' not found
> 
> go.bp.hgr <- hyperGTest(go.params)
Error in hyperGTest(go.params) : object 'go.params' not found
> 
print(load("~/github/projects/priceLab/cory/mef2c-targets-geneAnnotation/mef2c.tcx.RData"))
head(temp)
q()
library(MotifDb) 
igv
q()
> source("test_NoDnaModelBuilder.R")
source("test_NoDnaModelBuilder.R")
q()
source("test_NoDnaModelBuilder.R")
q()
source("test_NoDnaModelBuilder.R"); runTests()
source("test_NoDnaModelBuilder.R"); runTests()
q()
q()
source("test_NoDnaModelBuilder.R"); runTests()
source("test_NoDnaModelBuilder.R"); runTests()
source("test_NoDnaModelBuilder.R"); runTests()
traceback()
()
q()
source("test_NoDnaModelBuilder.R"); runTests()
traceback()
q()
source("test_NoDnaModelBuilder.R"); runTests()
q()
source("test_NoDnaModelBuilder.R"); runTests()
tfList
class(tfList)
Q
q()
source("test_NoDnaModelBuilder.R"); runTests()
tfList
length(tf.candidates)
(tf.candidates)
mtx.cor[1:10, 1:10]
mtx.cor[targetGene, "STAT4"]
tbl.model
c
q()
source("test_NoDnaModelBuilder.R"); runTests()
c
c
names(tbl.model)
x <- tbl.model
tbl.model
all(expected.tfs %in% tbl.model$gene)
q()
source("test_NoDnaModelBuilder.R"); runTests()
source("test_RegionsMotifMatchingModelBuilder.R")
runTests()
q()
source("test_RegionsMotifMatchingModelBuilder.R"); runTests()
traceback()
q()
source("test_RegionsMotifMatchingModelBuilder.R"); runTests()
traceback()
q()
source("test_RegionsMotifMatchingModelBuilder.R"); runTests()
tbl.model
Q
q()
source("test_FootprintDatabaseModelBuilder.R"); runTests()
q()
source("test_trenaSGM.R"); runTests()
models$two$model$pcaMax
models$one$model
q()
source("test_trenaSGM.R"); runTests()
coi
c
coi
c
source("test_trenaSGM.R"); runTests()
coi
c
coi
c
traceback()
coi
c
coi
c
tbl.summary
q()
