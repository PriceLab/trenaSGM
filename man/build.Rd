% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FootprintDatabaseModelBuilder.R,
%   R/RegionsMotifMatchingModelBuilder.R, R/NoDnaModelBuilder.R
\docType{methods}
\name{build,FootprintDatabaseModelBuilder-method}
\alias{build,FootprintDatabaseModelBuilder-method}
\alias{build}
\alias{build,RegionsMotifMatchingModelBuilder-method}
\alias{build,NoDnaModelBuilder-method}
\title{create regulatory model of the gene, following all the specified options}
\usage{
\S4method{build}{FootprintDatabaseModelBuilder}(obj)

\S4method{build}{RegionsMotifMatchingModelBuilder}(obj)

\S4method{build}{NoDnaModelBuilder}(obj)
}
\arguments{
\item{obj}{An object of class FootprintDatabaseModelBuilder}

\item{strategy}{a list specifying all the options to build one or more models}

\item{obj}{An object of class RegionsMotifMatchingModelBuilder}

\item{strategy}{a list specifying all the options to build one or more models}

\item{obj}{An object of class NoDnaModelBuilder}

\item{strategy}{a list specifying all the options to build one or more models}
}
\value{
A list with a bunch of tables...

A list with a bunch of tables...

A list with a bunch of tables...
}
\description{
create regulatory model of the gene, following all the specified options

create regulatory model of the gene, following all the specified options

create regulatory model of the gene, following all the specified options
}
\examples{
if(interactive()){
  fp.specs <- list(title="fp.2000up.200down",
                   type="database.footprints",
                   chrom="chr6",
                   tss=41163186,
                   start=(tss-2000),
                   downstream=(tss+200),
                   matrix
                   db.host="khaleesi.systemsbiology.net",
                   databases=list("brain_hint_20"),
                   motifDiscovery="builtinFimo",
                   tfMapping=c("TFClass", "MotifDB"),
                   tfPrefilterCorrelation=0.2)
  fpBuilder <- FootprintDatabaseModelBuilder("hg38", "TREM2", fp.specs, quiet=TRUE)
  load(system.file(package="trenaSGM", "extdata", "mayo.tcx.RData"))
  build(fpBuilder, mtx)
  }

if(interactive()){
  fp.specs <- list(title="fp.2000up.200down",
                   type="database.footprints",
                   chrom="chr6",
                   tss=41163186,
                   start=(tss-2000),
                   downstream=(tss+200),
                   matrix
                   db.host="khaleesi.systemsbiology.net",
                   databases=list("brain_hint_20"),
                   motifDiscovery="builtinFimo",
                   tfMapping=list("TFClass", "MotifDB"),
                   tfPrefilterCorrelation=0.2)
  fpBuilder <- RegionsMotifMatchingModelBuilder("hg38", "TREM2", fp.specs, quiet=TRUE)
  load(system.file(package="trenaSGM", "extdata", "mayo.tcx.RData"))
  build(fpBuilder, mtx)
  }

if(interactive()){
  load(system.file(package="trenaSGM", "extdata", "mayo.tcx.RData"))
  build.spec <- list(title="trem2.noDNA.allTFs",
                     type="noDNA_tfsSupplied",
                     matrix=mtx,
                     tfPrefilterCorrelation=0.4,
                     orderByColumn="rfScore",
                     solverNames=c("lasso", "lassopv", "pearson", "randomForest", "ridge", "spearman"))

  builder <- NoDnaModelBuilder("hg38", "TREM2", build.spec, quiet=TRUE)
  build(builder)
  }

}
